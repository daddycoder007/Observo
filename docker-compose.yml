version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: observo-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: observo
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - observo-network
    command: mongod --auth

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: observo-zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - observo-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: observo-kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
    networks:
      - observo-network

  server:
    image: daddycoder007/observo-server:latest
    container_name: observo-server
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      MONGODB_URI: mongodb://admin:password@mongodb:27017/observo?authSource=admin
      KAFKA_BROKERS: kafka:29092
      NODE_ENV: production
    depends_on:
      - mongodb
      - kafka
    networks:
      - observo-network
    volumes:
      - ./server/logs:/logs

  dashboard:
    image: daddycoder007/observo-dashboard:latest
    container_name: observo-dashboard
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      REACT_APP_API_URL: http://localhost:3000
    depends_on:
      - server
    networks:
      - observo-network

  # Optional: Kafka UI for management
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: observo-kafka-ui
    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - observo-network

volumes:
  mongodb_data:

networks:
  observo-network:
    driver: bridge 